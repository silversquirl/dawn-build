name: Build Dawn
# TODO: schedule automatic builds
on: [push, workflow_dispatch]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64, aarch64]
        platform:
          - linux-gnu
          - linux-musl
          - macos
          - windows

        include:
          - runner: ubuntu-latest
            libext: so
          - platform: windows
            runner: windows-latest
            libext: dll
          - platform: macos
            runner: macos-latest
            libext: dylib

        exclude:
          - arch: aarch64
            platform: windows

    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check Mach's preferred Zig version
        id: zig-version
        run: |
          echo "version=$(curl -sSL https://github.com/hexops/mach/raw/main/.zigversion)" >>"$GITHUB_OUTPUT"

      - name: Install Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: ${{ steps.zig-version.outputs.version }}

      - name: Checkout mach-gpu-dawn
        uses: actions/checkout@v4
        with:
          path: mach-gpu-dawn
          repository: hexops/mach-gpu-dawn
          submodules: true

      - name: Load global Zig cache
        id: global-cache
        uses: actions/cache/restore@v3
        with:
          path: ~/.cache/zig
          key: global-${{ hashFiles('build.zig.zon') }}-${{ runner.os }}
          restore-keys: |
            global-${{ hashFiles('build.zig.zon') }}-
            global-

      - name: Load local Zig cache
        if: ${{ runner.os == 'Linux' }}
        id: local-cache
        uses: actions/cache/restore@v3
        with:
          path: zig-cache
          key: local-${{ matrix.arch }}-${{ matrix.platform }}-${{ hashFiles('build.zig.zon') }}
          restore-keys: local-${{ matrix.arch }}-${{ matrix.platform }}-

      # I don't know how to fix this on non-Linux, so I simply won't :)
      # I've disabled the local cache for those platforms instead
      - name: Remove duplicate manifest entries (ziglang/zig#16149)
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt install moreutils
          for f in zig-cache/h/*.txt; do
            sort -u "$f" | sponge "$f"
          done

      - name: Build
        run: zig build --verbose -Doptimize=ReleaseFast -Dtarget=${{ matrix.arch }}-${{ matrix.platform }}

      - name: Save global Zig cache
        uses: actions/cache/save@v3
        if: always()
        with:
          path: zig-cache
          key: ${{ steps.global-cache.outputs.cache-primary-key }}

      - name: Save local Zig cache
        uses: actions/cache/save@v3
        if: always()
        with:
          path: zig-cache
          key: ${{ steps.local-cache.outputs.cache-primary-key }}

      # Not actually used by anything, but useful for manual inspection, etc.
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: dawn-${{ matrix.arch }}-${{ matrix.platform }}
          path: zig-out/lib/*

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          registry-url: https://registry.npmjs.org

      - name: Generate package.json
        uses: DamianReeves/write-file-action@v1.2
        with:
          path: zig-out/lib/package.json
          write-mode: overwrite
          contents: |
            {
              "name": "@bun-gpu/dawn-${{ matrix.arch }}-${{ matrix.platform }}",
              "version": "0.1.0+${{ github.sha }}",
              "files": ["libdawn.${{ matrix.libext }}"]
            }

      - name: Publish to npm
        run: npm publish
        working-directory: zig-out/lib
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
