name: Build Dawn (gn + build_depot)
# TODO: schedule automatic builds
on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/gn_build.yml
      - args.gn
      - custom.gclient

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        arch: [x64, arm64]
        platform:
          - linux
          - mac
          - win

        include:
          - platform: linux
            runner: ubuntu-latest
            libext: so
          - platform: win
            runner: windows-latest
            libext: dll
          - platform: mac
            runner: macos-latest
            libext: dylib

        exclude:
          - arch: arm64
            platform: linux
          - arch: arm64
            platform: win

    runs-on: ${{ matrix.runner }}

    env:
      BUILD_DIR: ${{ matrix.platform == 'win' && '/c' || github.workspace }}/dawn/out/Release
      CCACHE_DIR: ${{ matrix.platform == 'win' && '/c' || github.workspace }}/ccache
      DEPOT_TOOLS_WIN_TOOLCHAIN: 0
      key-stem: ${{ matrix.arch }}-${{ matrix.platform }}

    defaults:
      run: { shell: bash }

    steps:
      - uses: actions/checkout@v4

      - name: Install build tools (Linux)
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt update
          sudo apt install gn ninja-build ccache

      - name: Install build tools (macOS)
        if: ${{ runner.os == 'MacOS' }}
        run: |
          brew update
          brew install ninja ccache
          curl -Lo gn-mac-amd64.zip https://chrome-infra-packages.appspot.com/dl/gn/gn/mac-amd64/+/latest
          unzip gn-mac-amd64.zip
          echo "$PWD/gn-mac-amd64" >>"$GITHUB_PATH"

      - name: Install build tools (Windows)
        if: ${{ runner.os == 'Windows' }}
        run: |
          choco install ccache
          vcpkg install vcpkg-tool-gn vcpkg-tool-ninja

      - name: Fetch Dawn
        id: get-dawn
        run: |
          git clone --depth=1 https://dawn.googlesource.com/dawn.git
          cd dawn
          echo "rev=$(git rev-parse HEAD)" >>"$GITHUB_ENV"

      - name: Fetch depot_tools
        run: git clone --depth=1 https://chromium.googlesource.com/chromium/tools/depot_tools.git

      - name: Add depot_tools to path
        run: echo "$PWD/depot_tools" >>"$GITHUB_PATH"

      - name: Update dependencies
        working-directory: dawn
        run: |
          cp ../custom.gclient .gclient
          gclient sync

      - name: Load compilation cache
        id: compile-cache
        uses: actions/cache/restore@v3
        with:
          path: |
            ${{ env.BUILD_DIR }}
            ${{ env.CCACHE_DIR }}
          key: compile-${{ env.key-stem }}-${{ steps.get-dawn.outputs.rev }}-${{ github.sha }}
          restore-keys: |
            compile-${{ env.key-stem }}-${{ steps.get-dawn.outputs.rev }}-
            compile-incomplete-${{ env.key-stem }}-${{ steps.get-dawn.outputs.rev }}-
            compile-${{ env.key-stem }}-

      - name: Build Dawn
        working-directory: dawn
        run: |
          mkdir -p ${{ env.BUILD_DIR }}
          cp ../args.gn ${{ env.BUILD_DIR }}
          gn gen ${{ env.BUILD_DIR }} --args='target_os="${{ matrix.platform }}" target_cpu="${{ matrix.arch }}"'
          autoninja -C ${{ env.BUILD_DIR }}

      - name: Save compilation cache
        uses: actions/cache/save@v3
        with:
          path: |
            ${{ env.BUILD_DIR }}
            ${{ env.CCACHE_DIR }}
          key: ${{ steps.compile-cache.outputs.cache-primary-key }}

      - name: Save incomplete compilation cache
        if: ${{ !success() }}
        uses: actions/cache/save@v3
        with:
          path: |
            ${{ env.BUILD_DIR }}
            ${{ env.CCACHE_DIR }}
          key: compile-incomplete-${{ env.key-stem }}-${{ steps.get-dawn.outputs.rev }}-${{ github.sha }}-${{ github.run_number }}-${{ github.run_attempt }}

      - name: Bundle build artifacts
        working-directory: ${{ env.BUILD_DIR }}/..
        run: tar cf Release.tar Release

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: dawn-${{ matrix.arch }}-${{ matrix.platform }}
          path: ${{ env.BUILD_DIR }}.tar
